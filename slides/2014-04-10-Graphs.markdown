name: inverse
layout: true
class: left, top, inverse

---

# Graphs & Networks

---

## Graphs

  + Graphs (or networks) an model a surprising number of domains
  + Modeling with graphs opens up a large number of algorithms
  + Linear math has many connections to graphs

???

## Math

  + Data mining theme: get your problem stated as a math problem, whole slew of
    solutions present themselves
  + Linear math is really useful for running equations of all nodes, or
    simulate moving across network

---

## Vertices & Edges

  + Vertex: the interconnected objects, or nodes
  + Edge: the lines or curves that connect vertices
  + Graph: Collection of vertices and edges ```G = (V,E)```

.white-background[
<img src="img/GraphNodesEdges.png" width=100% />
]

???

## Definitions

  + These are the abstract terms, how do they relate to the real world?

---

## Examples

  + Vertex: User, building, router, product
  + Edge: Relationship, road, network cable, purchased
  + Graph: Social Network, physical infrastructure, Internet, purchasing
    history

???

## Examples

  + Many graphs have assumed edge labels: the edges represent something
    consistent
  + Some graphs have multiple types of edges: relationship is one of family,
    friend, co-worker, etc.
  + Edge can be anything that ties two things together: purchase history, e.g.,
    is not a physical thing connecting, but an idea

---

## Social Networks

  + An edge connects two people
  + If this is just a line, what information are we missing about how the link
    was formed?

<img src="img/jretz-linkedin.png" width=100% />

???

## Symmetric vs. Asymmetric Edges

  + "Just a line" is called *undirected*
  + We're missing information about who invited whom. That would be expressed
    as an arrow and is called *directed*.

---

## Definitions

  + Directed: Connections have a direction. Invitations, water pipes, email.
  + Undirected: Connections have no direction. Friends, walkways on campus,
    physical wires.
  + Cycle: Set of nodes and edges in which you can travel back to a vertex
  + Acyclic: A graph without any cycles

<img src="img/Directed_acyclic_graph.png" width=60% />

???

## Modeling

  + Can always model an undirected graph as a directed graph by having two
    directed edges going in opposite directions in place of each undirected
    edge.

---

## Acyclic?

  + Social network (undirected)
  + Product purchases (directed)
  + Internet links (directed)
  + Class prerequisites (directed)
  + History of a git repo (directed)

???

## Answers

  + Social network: cyclic
  + Product purchases: acyclic
  + Internet links: cyclic
  + Class prerequisites: acyclic
  + Class prerequisites: acyclic

---

## Bipartite two_col:

  + Graph whose vertices can be divided into two distinct sets
  + Vertices in ```U= are only connected to those in =V```, vice versa
  + Product purchases: users ```U=, products =V```

<img src="img/Simple-bipartite-graph.svg.png" width=100% />

???

## Recommendations

  + Can model recommendations as link following:
  + From a user, follow to products
  + From products, follow back to other users
  + From other users, follow back to products

---

## Measurements

  + Geodesic distance: Number of edges to connect to vertices
  + Eccentricity: Largest geodesic distance from =v= to another
  + Radius: Minimum eccentricity
  + Diameter: Maximum eccentricity
  + Peripheral vertex: Vertex with eccentricity == diameter
  + Incoming/Outgoing edge count: Number of edges point to or from an edge

???

## Data Stats

  + Similar to getting distribution stats from initial datasets, these
    measurements can help you understand graphs as a summary
  + Once you have the incoming/outgoing edge counts, can use regular stats:
    what is the distribution of counts?

---

## Examples center:

<img src="img/6n-graf.svg.png" width=100% />

???

## Answers

  + Distance 6, 5: 2
  + Eccentricity 2: 3 (disconnected graph is infinity)
  + Radius: 2
  + Diameter: 3
  + Pericheral Verticies: 1, 2, 6

---

## SimRank

  + Vertices are similar if they share similar neighbors
  + SimRank between two vertices is the average of the SimRank of its neighbors

<img src="img/simrank.png" width=100% />
<img src="img/simrank-iterative.png" width=100% />

???

## Recursive

  + This is an iterative and recursive definition
  + Iterative because neighbors are influenced by each other
    + What is your simrank? Well, what is your simrank?
    + Converges
  + Recursive because you're figuring out simrank for all neighbors

---

## Example

<img src="img/6n-graf.svg.png" width=100% />

  2 SimRank 4

???

## Calculations

    + I(u) = 5,3,1
    + I(v) = 5,3,6
    + C = 0.6 daming factor.. similarity fades over time
    + s0(5,5) = 1
    + s0(3,3) = 1
    + s0(5,3) = 0
    + s0(3,5) = 0
    + s0(1,5) = s0(1,3) = 0, s0(6,1)... = 0
    + s1= 0.6/(2*2) * sum(1,1,0,0,0,0)
    + 0.3
    + Next round, we'll need to figure out s1 of 5,3 to calculate update

---

## Random Walk

  + Many algorithms based on concept of randomly deciding:
    + Follow link or not
    + Which link to follow
  + Simulate the decision many times
  + What is the probability you will wind up on ```u= from =v```?

---

# *Break*




---

next slide is two column - Slide 3
  main
    a series of sections will work better for some definitions
    a series of sections will work better for some definitions
    a series of sections will work better for some definitions
Slide 4
  main
    a series of sections will work better for some definitions
    a series of sections will work better for some definitions
    a series of sections will work better for some definitions
next slide is two column - Slide 5
next slide is two column
Slide 6
  main
    a series of sections will work better for some definitions
    a series of sections will work better for some definitions
    a series of sections will work better for some definitions
    a series of sections will work better for some definitions
next slide is two column - Slide 8
Slide 9
  main
    a series of sections will work better for some definitions
    a series of sections will work better for some definitions
    a series of sections will work better for some definitions
    a series of sections will work better for some definitions
    a series of sections will work better for some definitions
    a series of sections will work better for some definitions
Headings are the right level?
